 
class SceneAccessor
{
public:
	SceneAccessor();
	~SceneAccessor();
	bool loadConfig();

	void addSceneByMapName(const std::string &mapName,PSceneStruct pSceneStruct);
	void addSceneBySceneName(const std::string &sceneName,PSceneStruct pSceneStruct);

	const PSceneStruct getSceneByID(uint32 sceneId);
	 
	PSceneNpc getSceneNpcByNpcID(uint32 npcId);
	 
	 
	const PSceneStruct getSceneStructByMapName(const std::string &mapName);
	const PSceneStruct getSceneStructBySceneName(const std::string &sceneName);
	int  getSceneIdByMapName(const std::string &mapName);
	const char* getMapNameBySceneID(int sceneId);
	 
	const SceneGate* getSceneGate(const int gateId);
	const DuplicateStruct* getDuplicateStruct(const int duplicateId);

	inline SceneBase* getBirthScene(){assert(m_pBirthScene);return m_pBirthScene;}
	inline SceneBase* getUrgentScene(){assert(m_pUrgentScene);return m_pUrgentScene;}
	////创建NPC默认对话的table
	void makeNpcDefaultTalkData();
	void pushToNpcDefaultTalk(lua_State *L, const char* talk, int npcid);

public:
	SceneBase* m_pBirthScene;//新手村
	SceneBase* m_pUrgentScene;//应急场景
};



